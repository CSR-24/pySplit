#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.3 on Sun Apr 22 22:17:18 2012

import wx
import os
split_output_folder_path="c:\\"
split_input_file_path=''
revert_output_folder_path=''
revert_input_folder_path="c\\"

# begin wxGlade: extracode
# end wxGlade



class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.notebook_1 = wx.Notebook(self, -1, style=0)
        self.notebook_1_pane_2 = wx.Panel(self.notebook_1, -1)
        self.panel_1 = wx.Panel(self.notebook_1, -1)
        self.label_1 = wx.StaticText(self, -1, "Splitter Revertor Software", style=wx.ALIGN_CENTRE)
        self.label_1_copy_copy_copy = wx.StaticText(self.panel_1, -1, "Splitter")
        self.label_2_copy_copy = wx.StaticText(self.panel_1, -1, "CHOOSE any FILE to SPLIT", style=wx.ALIGN_CENTRE)
        self.reverot_button_copy = wx.Button(self.panel_1, -1, "INPUT PATH")
        self.label_2_copy_copy_copy = wx.StaticText(self.panel_1, -1, "Choose OUTPUT Path", style=wx.ALIGN_CENTRE)
        self.reverot_button_copy_copy = wx.Button(self.panel_1, -1, "OUTPUT PATH")
        self.label_2_copy_copy_copy_1 = wx.StaticText(self.panel_1, -1, "SPLIT NOW", style=wx.ALIGN_CENTRE)
        self.reverot_button_copy_copy_1 = wx.Button(self.panel_1, -1, "SPLIT NOW")
        self.label_1_copy_copy_copy_copy = wx.StaticText(self.notebook_1_pane_2, -1, "Revertor")
        self.label_2_copy_copy_copy_2 = wx.StaticText(self.notebook_1_pane_2, -1, "CHOOSE any FOLDER to REVERT", style=wx.ALIGN_CENTRE)
        self.reverot_button_copy_copy_2 = wx.Button(self.notebook_1_pane_2, -1, "SPLIT FOLDER")
        self.label_2_copy_copy_copy_copy = wx.StaticText(self.notebook_1_pane_2, -1, "Choose OUTPUT Path", style=wx.ALIGN_CENTRE)
        self.reverot_button_copy_copy_copy = wx.Button(self.notebook_1_pane_2, -1, "OUTPUT PATH")
        self.label_2_copy_copy_copy_1_copy = wx.StaticText(self.notebook_1_pane_2, -1, "REVERT NOW", style=wx.ALIGN_CENTRE)
        self.reverot_button_copy_copy_1_copy = wx.Button(self.notebook_1_pane_2, -1, "REVERT NOW")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.split_input, self.reverot_button_copy)
        self.Bind(wx.EVT_BUTTON, self.split_output, self.reverot_button_copy_copy)
        self.Bind(wx.EVT_BUTTON, self.splitter, self.reverot_button_copy_copy_1)
        self.Bind(wx.EVT_BUTTON, self.revert_input, self.reverot_button_copy_copy_2)
        self.Bind(wx.EVT_BUTTON, self.revert_output, self.reverot_button_copy_copy_copy)
        self.Bind(wx.EVT_BUTTON, self.revertor, self.reverot_button_copy_copy_1_copy)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("frame_1")
        self.SetSize((465, 278))
        self.label_1.SetMinSize((383, 25))
        self.label_1.SetBackgroundColour(wx.Colour(128, 128, 128))
        self.label_1.SetForegroundColour(wx.Colour(255, 255, 0))
        self.label_1.SetFont(wx.Font(11, wx.MODERN, wx.NORMAL, wx.NORMAL, 0, "Bauhaus 93"))
        self.label_1_copy_copy_copy.SetMinSize((383, 30))
        self.label_1_copy_copy_copy.SetBackgroundColour(wx.Colour(255, 255, 0))
        self.label_1_copy_copy_copy.SetForegroundColour(wx.Colour(0, 0, 0))
        self.label_1_copy_copy_copy.SetFont(wx.Font(15, wx.MODERN, wx.NORMAL, wx.NORMAL, 0, "Bauhaus 93"))
        self.label_2_copy_copy.SetMinSize((250, 20))
        self.label_2_copy_copy.SetBackgroundColour(wx.Colour(255, 255, 0))
        self.label_2_copy_copy.SetForegroundColour(wx.Colour(35, 142, 35))
        self.label_2_copy_copy.SetFont(wx.Font(11, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Baskerville Old Face"))
        self.reverot_button_copy.SetMinSize((112, 23))
        self.reverot_button_copy.SetBackgroundColour(wx.Colour(255, 255, 0))
        self.reverot_button_copy.SetForegroundColour(wx.Colour(35, 142, 35))
        self.reverot_button_copy.SetFont(wx.Font(8, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Baskerville Old Face"))
        self.label_2_copy_copy_copy.SetMinSize((250, 20))
        self.label_2_copy_copy_copy.SetBackgroundColour(wx.Colour(255, 255, 0))
        self.label_2_copy_copy_copy.SetForegroundColour(wx.Colour(35, 142, 35))
        self.label_2_copy_copy_copy.SetFont(wx.Font(11, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Baskerville Old Face"))
        self.reverot_button_copy_copy.SetMinSize((112, 23))
        self.reverot_button_copy_copy.SetBackgroundColour(wx.Colour(255, 255, 0))
        self.reverot_button_copy_copy.SetForegroundColour(wx.Colour(35, 142, 35))
        self.reverot_button_copy_copy.SetFont(wx.Font(8, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Baskerville Old Face"))
        self.label_2_copy_copy_copy_1.SetMinSize((250, 20))
        self.label_2_copy_copy_copy_1.SetBackgroundColour(wx.Colour(255, 255, 0))
        self.label_2_copy_copy_copy_1.SetForegroundColour(wx.Colour(35, 142, 35))
        self.label_2_copy_copy_copy_1.SetFont(wx.Font(11, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Baskerville Old Face"))
        self.reverot_button_copy_copy_1.SetMinSize((112, 23))
        self.reverot_button_copy_copy_1.SetBackgroundColour(wx.Colour(255, 255, 0))
        self.reverot_button_copy_copy_1.SetForegroundColour(wx.Colour(35, 142, 35))
        self.reverot_button_copy_copy_1.SetFont(wx.Font(8, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Baskerville Old Face"))
        self.panel_1.SetBackgroundColour(wx.Colour(192, 192, 192))
        self.label_1_copy_copy_copy_copy.SetMinSize((383, 30))
        self.label_1_copy_copy_copy_copy.SetBackgroundColour(wx.Colour(255, 255, 0))
        self.label_1_copy_copy_copy_copy.SetForegroundColour(wx.Colour(0, 0, 0))
        self.label_1_copy_copy_copy_copy.SetFont(wx.Font(15, wx.MODERN, wx.NORMAL, wx.NORMAL, 0, "Bauhaus 93"))
        self.label_2_copy_copy_copy_2.SetMinSize((250, 20))
        self.label_2_copy_copy_copy_2.SetBackgroundColour(wx.Colour(255, 255, 0))
        self.label_2_copy_copy_copy_2.SetForegroundColour(wx.Colour(35, 142, 35))
        self.label_2_copy_copy_copy_2.SetFont(wx.Font(11, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Baskerville Old Face"))
        self.reverot_button_copy_copy_2.SetMinSize((112, 23))
        self.reverot_button_copy_copy_2.SetBackgroundColour(wx.Colour(255, 255, 0))
        self.reverot_button_copy_copy_2.SetForegroundColour(wx.Colour(35, 142, 35))
        self.reverot_button_copy_copy_2.SetFont(wx.Font(8, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Baskerville Old Face"))
        self.label_2_copy_copy_copy_copy.SetMinSize((250, 20))
        self.label_2_copy_copy_copy_copy.SetBackgroundColour(wx.Colour(255, 255, 0))
        self.label_2_copy_copy_copy_copy.SetForegroundColour(wx.Colour(35, 142, 35))
        self.label_2_copy_copy_copy_copy.SetFont(wx.Font(11, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Baskerville Old Face"))
        self.reverot_button_copy_copy_copy.SetMinSize((112, 23))
        self.reverot_button_copy_copy_copy.SetBackgroundColour(wx.Colour(255, 255, 0))
        self.reverot_button_copy_copy_copy.SetForegroundColour(wx.Colour(35, 142, 35))
        self.reverot_button_copy_copy_copy.SetFont(wx.Font(8, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Baskerville Old Face"))
        self.label_2_copy_copy_copy_1_copy.SetMinSize((250, 20))
        self.label_2_copy_copy_copy_1_copy.SetBackgroundColour(wx.Colour(255, 255, 0))
        self.label_2_copy_copy_copy_1_copy.SetForegroundColour(wx.Colour(35, 142, 35))
        self.label_2_copy_copy_copy_1_copy.SetFont(wx.Font(11, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Baskerville Old Face"))
        self.reverot_button_copy_copy_1_copy.SetMinSize((112, 23))
        self.reverot_button_copy_copy_1_copy.SetBackgroundColour(wx.Colour(255, 255, 0))
        self.reverot_button_copy_copy_1_copy.SetForegroundColour(wx.Colour(35, 142, 35))
        self.reverot_button_copy_copy_1_copy.SetFont(wx.Font(8, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Baskerville Old Face"))
        self.notebook_1_pane_2.SetBackgroundColour(wx.Colour(192, 192, 192))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_46 = wx.BoxSizer(wx.VERTICAL)
        sizer_1_copy = wx.BoxSizer(wx.VERTICAL)
        sizer_2_copy_1_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2_copy_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_46.Add(self.label_1, 0, wx.EXPAND, 0)
        sizer_46.Add((20, 10), 0, wx.EXPAND, 0)
        sizer_1.Add(self.label_1_copy_copy_copy, 0, wx.EXPAND, 0)
        sizer_2.Add((20, 20), 0, wx.EXPAND, 0)
        sizer_2.Add(self.label_2_copy_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2.Add((50, 20), 0, wx.EXPAND, 0)
        sizer_2.Add(self.reverot_button_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)
        sizer_2_copy.Add((20, 20), 0, wx.EXPAND, 0)
        sizer_2_copy.Add(self.label_2_copy_copy_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2_copy.Add((50, 20), 0, wx.EXPAND, 0)
        sizer_2_copy.Add(self.reverot_button_copy_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1.Add(sizer_2_copy, 1, wx.EXPAND, 0)
        sizer_2_copy_1.Add((20, 20), 0, wx.EXPAND, 0)
        sizer_2_copy_1.Add(self.label_2_copy_copy_copy_1, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2_copy_1.Add((50, 20), 0, wx.EXPAND, 0)
        sizer_2_copy_1.Add(self.reverot_button_copy_copy_1, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1.Add(sizer_2_copy_1, 1, wx.EXPAND, 0)
        self.panel_1.SetSizer(sizer_1)
        sizer_1_copy.Add(self.label_1_copy_copy_copy_copy, 0, wx.EXPAND, 0)
        sizer_2_copy_2.Add((20, 20), 0, wx.EXPAND, 0)
        sizer_2_copy_2.Add(self.label_2_copy_copy_copy_2, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2_copy_2.Add((50, 20), 0, wx.EXPAND, 0)
        sizer_2_copy_2.Add(self.reverot_button_copy_copy_2, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1_copy.Add(sizer_2_copy_2, 1, wx.EXPAND, 0)
        sizer_2_copy_copy.Add((20, 20), 0, wx.EXPAND, 0)
        sizer_2_copy_copy.Add(self.label_2_copy_copy_copy_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2_copy_copy.Add((50, 20), 0, wx.EXPAND, 0)
        sizer_2_copy_copy.Add(self.reverot_button_copy_copy_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1_copy.Add(sizer_2_copy_copy, 1, wx.EXPAND, 0)
        sizer_2_copy_1_copy.Add((20, 20), 0, wx.EXPAND, 0)
        sizer_2_copy_1_copy.Add(self.label_2_copy_copy_copy_1_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2_copy_1_copy.Add((50, 20), 0, wx.EXPAND, 0)
        sizer_2_copy_1_copy.Add(self.reverot_button_copy_copy_1_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1_copy.Add(sizer_2_copy_1_copy, 1, wx.EXPAND, 0)
        self.notebook_1_pane_2.SetSizer(sizer_1_copy)
        self.notebook_1.AddPage(self.panel_1, "Splitter")
        self.notebook_1.AddPage(self.notebook_1_pane_2, "Revertor")
        sizer_46.Add(self.notebook_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_46)
        self.Layout()
        # end wxGlade

    def split_input(self, event): # wxGlade: MyFrame.<event_handler>
        global split_input_file
        dlg = wx.FileDialog(self, message="Choose a VHD",
            defaultDir=os.getcwd(), defaultFile="",
            style=wx.OPEN | wx.CHANGE_DIR )
        if dlg.ShowModal() == wx.ID_OK:
            split_input_file= dlg.GetPath()
            dlg.Destroy()
            
        dlg=wx.MessageDialog(self, 
                    "Path selected at "+split_input_file,
                    "Success",wx.OK)
        result = dlg.ShowModal()
        if result == wx.ID_OK:
             dlg.Destroy()  

        
        
        
        

    def split_output(self, event): # wxGlade: MyFrame.<event_handler>
        global split_output_dir
        dialog = wx.DirDialog(None, "Please choose the input directory:",\
                                    style=1 ,defaultPath="c:\\", pos = (10,10))
        if dialog.ShowModal() == wx.ID_OK:
                  split_output_dir = dialog.GetPath()
                  split_output_dir=split_output_dir[0:len(split_output_dir)]
        dlg=wx.MessageDialog(self, 
                    "Path selected at "+split_output_dir,
                    "Success",wx.OK)
        result = dlg.ShowModal()
        if result == wx.ID_OK:
             dlg.Destroy()   


    def splitter(self, event): # wxGlade: MyFrame.<event_handler>
        global split_input_file
        global split_output_dir
    
        name=split_input_file
        ipath=str(name)
        i,ext=os.path.splitext(ipath)

        folder= os.path.basename(name)
        folder_name=split_output_dir+"\\"+folder
        
        try:
            
            os.mkdir(folder_name)
            print("\t\t\tSplitting File Please Wait")
            folder_name=split_output_dir+"\\"+folder+"\\"
            
        finally:
            
            opath1=folder_name+'part1'+ext
            opath2=folder_name+'part2'+ext
            opath3=folder_name+'part3'+ext
            
            see=open("seethis.txt","w")
            see.write(opath1+"\n"+opath2+"\n"+opath3+"\n"+folder_name)
            
            khol = open(ipath,"rb")
            clone1=open(opath1,'wb')
            clone2=open(opath2,'wb')
            clone3=open(opath3,'wb')
            byte='start'

        try:
            while byte != "":
                byte = khol.read(1)
                clone1.write(byte)
                byte=khol.read(1)
                clone2.write(byte)
                byte=khol.read(1)
                clone3.write(byte)
            else:
                print('File___Splitted_Successfully......')
        finally:
            khol.close()
            clone1.close()
            clone2.close()
            clone3.close()
            
            dlg=wx.MessageDialog(self, 
                    "Splitted Successfully",
                    "Success",wx.OK)
            result = dlg.ShowModal()
            if result == wx.ID_OK:
                 dlg.Destroy()  
    




    

    def revert_input(self, event): # wxGlade: MyFrame.<event_handler>
        global revert_input_folder_path
        dialog = wx.DirDialog(None, "Please choose the input directory:",\
                                    style=1 ,defaultPath="c:\\", pos = (10,10))
        if dialog.ShowModal() == wx.ID_OK:
                  revert_input_folder_path = dialog.GetPath()
                  revert_input_folder_path=revert_input_folder_path[0:len(revert_input_folder_path)]
                  #o=open("out.txt","w")
                  #o.write(split_output_folder_path+"\n"+split_input_file_path)
        dlg=wx.MessageDialog(self, 
                    "Path selected at "+revert_input_folder_path,
                    "Success",wx.OK)
        result = dlg.ShowModal()
        if result == wx.ID_OK:
             dlg.Destroy()        

    def revert_output(self, event): # wxGlade: MyFrame.<event_handler>
        global revert_output_folder_path
        dialog = wx.DirDialog(None, "Please choose the input directory:",\
                                    style=1 ,defaultPath="c:\\", pos = (10,10))
        if dialog.ShowModal() == wx.ID_OK:
                  revert_output_folder_path = dialog.GetPath()
                  revert_output_folder_path=revert_output_folder_path[0:len(revert_output_folder_path)]
                  #o=open("out.txt","w")
                  #o.write(split_output_folder_path+"\n"+split_input_file_path)
        dlg=wx.MessageDialog(self, 
                    "Path selected at "+revert_output_folder_path,
                    "Success",wx.OK)
        result = dlg.ShowModal()
        if result == wx.ID_OK:
             dlg.Destroy()   

    def revertor(self, event): # wxGlade: MyFrame.<event_handler>
        global revert_input_folder_path
        global revert_output_folder_path
        
        outt=revert_input_folder_path
        out=revert_output_folder_path
        unused , ext=os.path.splitext(outt)

        path=str(outt)
        output=str(out)

        output=output+"\\"
        path=path+"\\"

        output=output+'Reverted_File'+ext

        actual=open(output,'wb')

        path1=path+'part1'+ext
        path2=path+'part2'+ext
        path3=path+'part3'+ext

        clone1=open(path1,'rb')
        clone2=open(path2,'rb')
        clone3=open(path3,'rb')
        byte='start'
        print('....Reverting File Please Wait...')

        try:
            while byte!="":
                byte=clone1.read(1)
                actual.write(byte)
                byte=clone2.read(1)
                actual.write(byte)
                byte=clone3.read(1)
                actual.write(byte)
        finally:
            clone1.close()
            clone2.close()
            clone3.close()
            dlg=wx.MessageDialog(self, 
                    "Reverte Complete "+revert_output_folder_path,
                    "Success",wx.OK)
            result = dlg.ShowModal()
            if result == wx.ID_OK:
                 dlg.Destroy()
                 app.Exit()
            
        


# end of class MyFrame


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MyFrame(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
